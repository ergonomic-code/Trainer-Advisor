map $http_origin $header_origin {
    default "";
    "~(^|^http:\/\/)(localhost$|localhost:[0-9]{1,4}$)" "$http_origin";
}

upstream qyoga-backend {
        server localhost:8080;
}

server {
    listen 80;
    server_name trainer-advisor.pro;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    location ~ \.well-known/.* {
        root /var/www/html;
    }

    location / {
      return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name trainer-advisor.pro;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    client_max_body_size 0;


    ssl_certificate /etc/letsencrypt/certs/trainer-advisor.pro.crt;
    ssl_certificate_key /etc/letsencrypt/keys/trainer-advisor.pro.key;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    location /ops {
      return 404;
    }

    location ~ ^/(js|style|css|fonts|vendor|img) {
      expires 1h;

      proxy_pass http://qyoga-backend;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_buffering off;
    }

    location / {
       if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' '$header_origin';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
          #
          # Custom headers and headers various browsers *should* be OK with but aren't
          #
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
          #
          # Tell client that this pre-flight info is valid for 20 days
          #
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain; charset=utf-8';
          add_header 'Content-Length' 0;
          return 204;
       }
       if ($request_method ~* 'POST|PUT|DELETE|PATCH') {
          add_header 'Access-Control-Allow-Origin' '$header_origin' always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
       }

        proxy_pass http://qyoga-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }
}